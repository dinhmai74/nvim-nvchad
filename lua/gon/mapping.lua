vim.keymap.set('n', '<Esc>', '<cmd>nohlsearch<CR>')
vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, { desc = 'Go to previous [D]iagnostic message' })
vim.keymap.set('n', ']d', vim.diagnostic.goto_next, { desc = 'Go to next [D]iagnostic message' })
vim.keymap.set('t', '<Esc><Esc>', '<C-\\><C-n>', { desc = 'Exit terminal mode' })
-- vim.keymap.set('n', '<C-h>', '<C-w><C-h>', { desc = 'Move focus to the left window' })
-- vim.keymap.set('n', '<C-l>', '<C-w><C-l>', { desc = 'Move focus to the right window' })
-- vim.keymap.set('n', '<C-j>', '<C-w><C-j>', { desc = 'Move focus to the lower window' })
-- vim.keymap.set('n', '<C-k>', '<C-w><C-k>', { desc = 'Move focus to the upper window' })
vim.keymap.set('n', 'te', ':edit <C-R>=expand("%:p:h") . "/" <CR>', { noremap = true, silent = false })
vim.keymap.set('n', '<leader>fe', vim.cmd.Ex)
vim.keymap.set('v', 'J', ":m '>+1<CR>gv=gv")
vim.keymap.set('v', 'K', ":m '<-2<CR>gv=gv")
vim.keymap.set('n', 'J', 'mzJ`z')
vim.keymap.set('n', '<C-d>', '<C-d>zz')
vim.keymap.set('n', '<C-u>', '<C-u>zz')
vim.keymap.set('n', 'n', 'nzzzv')
vim.keymap.set('n', 'N', 'Nzzzv')
vim.keymap.set('n', '<S-w>', [[<cmd>noautocmd w<CR>]])
vim.keymap.set('x', '<leader>p', [["_dP]])
-- next greatest remap ever : asbjornHaland
vim.keymap.set('v', 'Y', [["+y]])
vim.keymap.set('n', '<leader>Y', [["+Y]])
vim.keymap.set({ 'n', 'v' }, '<leader>d', [["_d]])
vim.keymap.set('n', '\\.', ':lcd %:p:h<CR>')
vim.keymap.set('i', '<C-c>', '<Esc>')
vim.api.nvim_set_keymap('', 'gx', '<Cmd>call jobstart(["open", expand("<cfile>")], {"detach": v:true})<CR>', {})

if vim.fn.has 'mac' == 1 then
  vim.api.nvim_set_keymap('', 'gx', '<Cmd>call jobstart(["open", expand("<cfile>")], {"detach": v:true})<CR>', {})
elseif vim.fn.has 'unix' == 1 then
  vim.api.nvim_set_keymap('', 'gx', '<Cmd>call jobstart(["xdg-open", expand("<cfile>")], {"detach": v:true})<CR>', {})
end

vim.keymap.set('n', '[q', '<cmd>cnext<CR>zz')
vim.keymap.set('n', ']q', '<cmd>cprev<CR>zz')
vim.keymap.set('n', '<Tab>', '<cmd>cnext<CR>zz')
vim.keymap.set('n', '<S-Tab>', '<cmd>cprev<CR>zz')
vim.keymap.set('n', '[l', '<cmd>lnext<CR>zz')
vim.keymap.set('n', ']l', '<cmd>lprev<CR>zz')
vim.keymap.set('n', '<leader>vpp', '<cmd>e ~/dotfiles/nvim/.config/nvim/init.lua<CR>')

vim.keymap.set('n', '\\d', [["_d]], { silent = true })

vim.keymap.set('n', '*', [[':%s/'.expand('<cword>').'//gn<CR>']], { expr = true })
vim.keymap.set('n', '#', [[':%s/'.expand('<cword>').'//gn<CR>']], { expr = true })
vim.keymap.set('n', '\\r', [[':%s/<C-r><C-w>//g<Left><Left>']], { silent = false })
vim.keymap.set('n', '<leader>gt', '<cmd>Telescope git_status<CR>', { silent = true })
vim.keymap.set('n', '<leader>ga', "<cmd>lua require 'gitsigns'.stage_hunk()<CR>", { silent = true })
vim.keymap.set('n', '<leader>gA', "<cmd>lua require 'gitsigns'.stage_buffer()<CR>", { silent = true })
vim.keymap.set('n', '<leader>gd', '<cmd>DiffviewFileHistory %<CR>', { silent = true })
vim.keymap.set('n', '<leader>gD', '<cmd>Gitsigns diffthis HEAD<CR>', { silent = true })
vim.keymap.set('n', '<leader>gz', ':!tmux new-window -c ' .. vim.fn.getcwd() .. ' -- lazygit <CR><CR>', { silent = true })
vim.keymap.set('n', '<leader>gl', "<cmd>lua require 'gitsigns'.blame_line()<CR>", { silent = true })
vim.keymap.set('n', '<leader>gp', "<cmd>lua require 'gitsigns'.preview_hunk()<CR>", { silent = true })
vim.keymap.set('n', '<leader>gr', "<cmd>lua require 'gitsigns'.reset_hunk()<CR>", { silent = true })
vim.keymap.set('n', '<leader>gR', "<cmd>lua require 'gitsigns'.reset_buffer()<CR>", { silent = true })
vim.keymap.set('n', '<leader>gg', '<cmd>DiffviewOpen<CR>', { silent = true })
vim.keymap.set('n', '<leader>gu', "<cmd>lua require 'gitsigns'.undo_stage_hunk()<CR>", { silent = true })
vim.keymap.set('n', '<leader>go', '<cmd>Telescope git_status<CR>', { silent = true })
vim.keymap.set('n', '<leader>gb', '<cmd>Telescope git_branches<CR>', { silent = true })
vim.keymap.set('n', '<leader>gc', '<cmd>Telescope git_commits<CR>', { silent = true })
vim.keymap.set('n', '<leader>gC', '<cmd>Telescope git_bcommits<CR>', { silent = true })
vim.keymap.set('v', '<leader>ga', ':Gitsigns stage_hunk<CR>', { silent = true })
vim.keymap.set('v', '<leader>gs', ':Gitsigns stage_hunk<CR>', { silent = true })
vim.keymap.set({ 'o', 'x' }, '<leader>gi', ':<C-U>Gitsigns select_hunk<CR>')

-- search
vim.keymap.set('n', 'zR', require('ufo').openAllFolds)
vim.keymap.set('n', 'zM', require('ufo').closeAllFolds)

vim.keymap.set('n', '<leader>rr', ':%s/<C-r><C-w>//g<Left><Left>')
